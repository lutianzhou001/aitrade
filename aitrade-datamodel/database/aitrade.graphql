type User {
	id: ID! @unique
	createdAt: DateTime! @createdAt
	phoneNumber: String!
    nickName: String!
    address: String
	introduction: String!
	moment: Moment
	apiKey: String
	apiSecret: String
	passPhrase: String
}

type Token {
	tokenID: ID! @unique
    tokenName: String!
	isCopycat:String!
}

type Follow {
    follower: String!
	leader: String!
}

type Transactions {
	from : String!
	to: String!
	value: String!
	type: String!
}

type Moment {
	user: User
	createdAt: DateTime! @createdAt
	title: String
	content: String
}

type rate {
	key: String @unique
	value: String
}

type onchain {
	from : String!
	to: String!
	amount: String!
	timestamp: Int!
}

type margincloseout {
	timestamp: Int!
	exchange: String!
	contract_name: String!
	contract_type: String!
	closeout_type: String!
    contract_price: String!
	amount: String!
}

type contract {
	long: Int!
	short: Int!
}

type KOL {
	long: Int!
	short: Int!
}